{"version":3,"sources":["main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAM;AAAE,EAAA;AAAF,IAAa,OAAO,CAAC,KAAD,CAA1B;;AAEA,MAAM;AAAE,EAAA,aAAF;AAAiB,EAAA;AAAjB,IAAyB,OAAO,CAAC,UAAD,CAAtC;;AACA,MAAM,KAAK,GAAG,OAAO,CAAC,iBAAD,CAArB;;AACA,MAAM;AAAE,EAAA;AAAF,IAAc,OAAO,CAAC,eAAD,CAA3B;;AAEA,GAAG,CAAC,EAAJ,CAAO,OAAP,EAAgB,YAAW;AACzB,QAAM,UAAU,GAAG,IAAI,aAAJ,CAAkB;AACnC,IAAA,KAAK,EAAE,GAD4B;AAEnC,IAAA,MAAM,EAAE,GAF2B;AAGnC,IAAA,IAAI,EAAE;AAH6B,GAAlB,CAAnB;AAMA,EAAA,UAAU,CAAC,IAAX,CAAgB,eAAhB,EAAiC,MAAK;AACpC,IAAA,UAAU,CAAC,IAAX;;AACA,QAAI,KAAJ,EAAW;AACT,MAAA,UAAU,CAAC,WAAX,CAAuB,YAAvB;AACD;AACF,GALD;AAOA,QAAM,OAAO,GAAG,uBAAhB;AACA,QAAM,QAAQ,GAAG,MAAM,CAAC;AACtB,IAAA,QAAQ,EAAE,OAAO,CAAC,4CAAD,CADK;AAEtB,IAAA,QAAQ,EAAE,OAFY;AAGtB,IAAA,OAAO,EAAE;AAHa,GAAD,CAAvB;AAKA,QAAM,GAAG,GAAG,KAAK,GAAG,OAAH,GAAa,QAA9B;AAEA,EAAA,UAAU,CAAC,OAAX,CAAmB,IAAnB;AACA,EAAA,UAAU,CAAC,OAAX,CAAmB,GAAnB;AACD,CAxBD;AA0BA,GAAG,CAAC,EAAJ,CAAO,mBAAP,EAA4B,CAAC,KAAD,EAAQ,WAAR,EAAqB,GAArB,EAA0B,KAA1B,EAAiC,WAAjC,EAA8C,QAA9C,KAA0D;AACpF,EAAA,KAAK,CAAC,cAAN;AACA,EAAA,QAAQ,CAAC,IAAD,CAAR;AACD,CAHD;AAKA,GAAG,CAAC,EAAJ,CAAO,mBAAP,EAA4B,GAAG,CAAC,IAAhC","file":"main.map","sourceRoot":"..","sourcesContent":["const { format } = require('url');\n\nconst { BrowserWindow, app } = require('electron');\nconst isDev = require('electron-is-dev');\nconst { resolve } = require('app-root-path');\n\napp.on('ready', async () => {\n  const mainWindow = new BrowserWindow({\n    width: 800,\n    height: 600,\n    show: false,\n  });\n\n  mainWindow.once('ready-to-show', () => {\n    mainWindow.show();\n    if (isDev) {\n      mainWindow.webContents.openDevTools();\n    }\n  });\n\n  const devPath = 'http://localhost:1124';\n  const prodPath = format({\n    pathname: resolve('app/renderer/.parcel/production/index.html'),\n    protocol: 'file:',\n    slashes: true,\n  });\n  const url = isDev ? devPath : prodPath;\n\n  mainWindow.setMenu(null);\n  mainWindow.loadURL(url);\n});\n\napp.on('certificate-error', (event, webContents, url, error, certificate, callback) => {\n  event.preventDefault();\n  callback(true);\n});\n\napp.on('window-all-closed', app.quit);\n"]}